# Generated by Django 5.1.3 on 2025-02-20 11:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('department_type', models.CharField(choices=[('medical', 'Medical Department'), ('surgical', 'Surgical Department'), ('emergency', 'Emergency Department'), ('critical_care', 'Critical Care'), ('outpatient', 'Outpatient Clinic'), ('laboratory', 'Laboratory'), ('radiology', 'Radiology'), ('pharmacy', 'Pharmacy'), ('physiotherapy', 'Physiotherapy'), ('admin', 'Administration'), ('records', 'Medical Records'), ('it', 'Information Technology')], max_length=50)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('floor_number', models.CharField(max_length=10)),
                ('wing', models.CharField(max_length=50)),
                ('extension_number', models.CharField(max_length=10)),
                ('emergency_contact', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('is_active', models.BooleanField(default=True)),
                ('is_24_hours', models.BooleanField(default=False)),
                ('operating_hours_start', models.TimeField(blank=True, null=True)),
                ('operating_hours_end', models.TimeField(blank=True, null=True)),
                ('weekend_operating_hours_start', models.TimeField(blank=True, null=True)),
                ('weekend_operating_hours_end', models.TimeField(blank=True, null=True)),
                ('total_beds', models.PositiveIntegerField(default=0)),
                ('occupied_beds', models.PositiveIntegerField(default=0)),
                ('icu_beds', models.PositiveIntegerField(default=0)),
                ('occupied_icu_beds', models.PositiveIntegerField(default=0)),
                ('minimum_staff_required', models.PositiveIntegerField(default=1)),
                ('current_staff_count', models.PositiveIntegerField(default=0)),
                ('annual_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('equipment_count', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DepartmentEmergency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('required_staff', models.PositiveIntegerField()),
                ('declared_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(choices=[('general_medicine', 'General Medicine'), ('cardiology', 'Cardiology'), ('neurology', 'Neurology'), ('pediatrics', 'Pediatrics'), ('psychiatry', 'Psychiatry'), ('dermatology', 'Dermatology'), ('oncology', 'Oncology'), ('emergency_medicine', 'Emergency Medicine'), ('gastroenterology', 'Gastroenterology'), ('endocrinology', 'Endocrinology'), ('nephrology', 'Nephrology'), ('pulmonology', 'Pulmonology'), ('rheumatology', 'Rheumatology'), ('hematology', 'Hematology'), ('infectious_diseases', 'Infectious Diseases'), ('geriatrics', 'Geriatrics'), ('allergy_immunology', 'Allergy & Immunology'), ('general_surgery', 'General Surgery'), ('orthopedic_surgery', 'Orthopedic Surgery'), ('neurosurgery', 'Neurosurgery'), ('cardiothoracic_surgery', 'Cardiothoracic Surgery'), ('pediatric_surgery', 'Pediatric Surgery'), ('plastic_surgery', 'Plastic Surgery'), ('trauma_surgery', 'Trauma Surgery'), ('vascular_surgery', 'Vascular Surgery'), ('obstetrics_gynecology', 'Obstetrics & Gynecology'), ('reproductive_medicine', 'Reproductive Medicine'), ('radiology', 'Radiology'), ('pathology', 'Pathology'), ('anesthesiology', 'Anesthesiology'), ('nuclear_medicine', 'Nuclear Medicine'), ('ophthalmology', 'Ophthalmology'), ('ent', 'ENT (Otolaryngology)'), ('urology', 'Urology'), ('palliative_care', 'Palliative Care'), ('sports_medicine', 'Sports Medicine'), ('pain_management', 'Pain Management'), ('rehabilitation_medicine', 'Rehabilitation Medicine'), ('neonatology', 'Neonatal-Perinatal Medicine')], default='general_medicine', max_length=50)),
                ('surgical_subspecialty', models.CharField(blank=True, choices=[('minimally_invasive', 'Minimally Invasive Surgery'), ('robotic_surgery', 'Robotic Surgery'), ('transplant_surgery', 'Transplant Surgery'), ('bariatric_surgery', 'Bariatric Surgery'), ('oncologic_surgery', 'Oncologic Surgery'), ('pediatric_surgery', 'Pediatric Surgery'), ('cosmetic_surgery', 'Cosmetic Surgery')], help_text='Required only for surgical departments', max_length=50, null=True)),
                ('medical_license_number', models.CharField(max_length=50, unique=True)),
                ('license_expiry_date', models.DateField()),
                ('specialization', models.CharField(max_length=100)),
                ('years_of_experience', models.PositiveIntegerField()),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_documents', models.FileField(blank=True, null=True, upload_to='doctor_verifications/')),
                ('status', models.CharField(choices=[('active', 'Active'), ('on_leave', 'On Leave'), ('suspended', 'Suspended'), ('retired', 'Retired')], default='active', max_length=20)),
                ('office_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('office_location', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=20, null=True)),
                ('available_for_appointments', models.BooleanField(default=True)),
                ('consultation_hours_start', models.TimeField(blank=True, null=True)),
                ('consultation_hours_end', models.TimeField(blank=True, null=True)),
                ('consultation_days', models.CharField(help_text="Comma-separated days, e.g., 'Mon,Tue,Wed'", max_length=100)),
                ('medical_school', models.CharField(blank=True, max_length=200, null=True)),
                ('graduation_year', models.PositiveIntegerField(blank=True, null=True)),
                ('board_certifications', models.TextField(blank=True, null=True)),
                ('research_interests', models.TextField(blank=True, null=True)),
                ('publications', models.TextField(blank=True, null=True)),
                ('languages_spoken', models.CharField(blank=True, help_text='Comma-separated languages', max_length=200, null=True)),
            ],
            options={
                'permissions': [('can_prescribe', 'Can prescribe medications'), ('can_view_patient_records', 'Can view patient records'), ('can_update_patient_records', 'Can update patient records'), ('can_perform_surgery', 'Can perform surgical procedures'), ('can_admit_patients', 'Can admit patients to hospital'), ('can_discharge_patients', 'Can discharge patients'), ('can_order_tests', 'Can order medical tests'), ('can_view_test_results', 'Can view test results')],
            },
        ),
        migrations.CreateModel(
            name='HospitalAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('position', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('can_manage_staff', models.BooleanField(default=True)),
                ('can_manage_departments', models.BooleanField(default=True)),
                ('can_view_records', models.BooleanField(default=True)),
                ('can_manage_facilities', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Hospital Administrator',
                'verbose_name_plural': 'Hospital Administrators',
            },
        ),
        migrations.CreateModel(
            name='StaffTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('transfer_date', models.DateField()),
                ('effective_date', models.DateField()),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Transfer Completed'), ('cancelled', 'Transfer Cancelled')], default='pending', max_length=20)),
                ('reason', models.TextField(help_text='Detailed reason for the transfer request')),
                ('additional_notes', models.TextField(blank=True, help_text='Any additional information about the transfer')),
                ('rejection_reason', models.TextField(blank=True, help_text='Reason if transfer is rejected', null=True)),
                ('transfer_type', models.CharField(choices=[('permanent', 'Permanent Transfer'), ('temporary', 'Temporary Transfer'), ('rotation', 'Rotation Program'), ('emergency', 'Emergency Transfer')], default='permanent', max_length=20)),
                ('end_date', models.DateField(blank=True, help_text='End date for temporary transfers', null=True)),
            ],
            options={
                'ordering': ['-request_date'],
            },
        ),
        migrations.RemoveField(
            model_name='customuser',
            name='current_gp_practice',
        ),
        migrations.RemoveField(
            model_name='customuser',
            name='primary_hospital',
        ),
        migrations.RemoveField(
            model_name='generalpractitioner',
            name='first_name',
        ),
        migrations.RemoveField(
            model_name='generalpractitioner',
            name='last_name',
        ),
        migrations.AddField(
            model_name='customuser',
            name='gp_practice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='api.gppractice'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='hospital',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='api.hospital'),
        ),
        migrations.AddField(
            model_name='generalpractitioner',
            name='available_days',
            field=models.CharField(default='Monday to Friday', help_text='e.g., Monday to Friday', max_length=20),
        ),
        migrations.AddField(
            model_name='generalpractitioner',
            name='clinic_location',
            field=models.CharField(blank=True, help_text='Physical location of the clinic', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='generalpractitioner',
            name='consultation_fee',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Consultation fee in local currency', max_digits=5, null=True),
        ),
        migrations.AddField(
            model_name='generalpractitioner',
            name='specializations',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='generalpractitioner',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gp_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='hospital',
            name='accreditation_expiry',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='hospital',
            name='accreditation_status',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='hospital',
            name='bed_capacity',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='hospital',
            name='email',
            field=models.EmailField(blank=True, help_text='Hospital contact email', max_length=254, null=True),
        ),
        migrations.AddField(
            model_name='hospital',
            name='emergency_contact',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='hospital',
            name='emergency_unit',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='hospital',
            name='hospital_type',
            field=models.CharField(choices=[('public', 'Public Hospital'), ('private', 'Private Hospital'), ('specialist', 'Specialist Hospital'), ('teaching', 'Teaching Hospital'), ('clinic', 'Clinic'), ('research', 'Research Institution')], default='public', max_length=20),
        ),
        migrations.AddField(
            model_name='hospital',
            name='icu_unit',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='hospital',
            name='registration_number',
            field=models.CharField(blank=True, help_text='Hospital registration number', max_length=50, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='hospital',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hospitals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='hospital',
            name='verification_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='role',
            field=models.CharField(choices=[('patient', 'Patient'), ('doctor', 'Doctor'), ('nurse', 'Nurse'), ('pharmacist', 'Pharmacist'), ('lab_technician', 'Laboratory Technician'), ('receptionist', 'Receptionist'), ('admin', 'Admin'), ('physician_assistant', 'Physician Assistant'), ('medical_secretary', 'Medical Secretary'), ('physical_therapist', 'Physical Therapist'), ('occupational_therapist', 'Occupational Therapist'), ('social_worker', 'Social Worker'), ('psychologist', 'Psychologist'), ('counselor', 'Counselor'), ('radiologist_tech', 'Radiology Technician'), ('dietitian', 'Dietitian/Nutritionist'), ('case_manager', 'Case Manager'), ('home_health_aide', 'Home Health Aide'), ('medical_records_clerk', 'Medical Records Clerk'), ('it_support', 'IT Support Specialist'), ('data_analyst', 'Health Data Analyst'), ('hospital_admin', 'Hospital Administrator'), ('insurance_coordinator', 'Insurance Coordinator'), ('billing_specialist', 'Billing Specialist'), ('patient_advocate', 'Patient Advocate'), ('compliance_officer', 'Compliance Officer'), ('clinical_researcher', 'Clinical Researcher'), ('biomedical_engineer', 'Biomedical Engineer'), ('paramedic', 'Paramedic'), ('emt', 'Emergency Medical Technician (EMT)'), ('midwife', 'Midwife'), ('dentist', 'Dentist'), ('dental_hygienist', 'Dental Hygienist'), ('medical_interpreter', 'Medical Interpreter'), ('speech_therapist', 'Speech-Language Pathologist'), ('pharmacy_tech', 'Pharmacy Technician'), ('infection_control', 'Infection Control Specialist'), ('qa_officer', 'Quality Assurance Officer'), ('volunteer_coordinator', 'Volunteer Coordinator'), ('hr_manager', 'Human Resources Manager')], default='patient', max_length=30),
        ),
        migrations.AlterField(
            model_name='generalpractitioner',
            name='practice',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='general_practitioners', to='api.gppractice'),
        ),
        migrations.AlterField(
            model_name='medicalrecord',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='hospital',
            index=models.Index(fields=['registration_number'], name='api_hospita_registr_d9877c_idx'),
        ),
        migrations.AddIndex(
            model_name='hospital',
            index=models.Index(fields=['hospital_type'], name='api_hospita_hospita_892dc1_idx'),
        ),
        migrations.AddIndex(
            model_name='hospital',
            index=models.Index(fields=['is_verified'], name='api_hospita_is_veri_7b6d68_idx'),
        ),
        migrations.AddField(
            model_name='department',
            name='hospital',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='api.hospital'),
        ),
        migrations.AddField(
            model_name='departmentemergency',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.department'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='hospital',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doctors', to='api.hospital'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='department',
            name='assistant_head',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assistant_headed_department', to='api.doctor'),
        ),
        migrations.AddField(
            model_name='department',
            name='head_doctor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='headed_department', to='api.doctor'),
        ),
        migrations.AddField(
            model_name='hospitaladmin',
            name='hospital',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='administrator', to='api.hospital'),
        ),
        migrations.AddField(
            model_name='stafftransfer',
            name='approved_by_destination',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_incoming_transfers', to='api.hospitaladmin'),
        ),
        migrations.AddField(
            model_name='stafftransfer',
            name='approved_by_source',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_outgoing_transfers', to='api.hospitaladmin'),
        ),
        migrations.AddField(
            model_name='stafftransfer',
            name='from_department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transfers_out', to='api.department'),
        ),
        migrations.AddField(
            model_name='stafftransfer',
            name='from_hospital',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers_out', to='api.hospital'),
        ),
        migrations.AddField(
            model_name='stafftransfer',
            name='requested_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requested_transfers', to='api.hospitaladmin'),
        ),
        migrations.AddField(
            model_name='stafftransfer',
            name='staff_member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='stafftransfer',
            name='to_department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transfers_in', to='api.department'),
        ),
        migrations.AddField(
            model_name='stafftransfer',
            name='to_hospital',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers_in', to='api.hospital'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['medical_license_number'], name='api_doctor_medical_b30a26_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['department'], name='api_doctor_departm_f93570_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['status'], name='api_doctor_status_a88f78_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['hospital'], name='api_doctor_hospita_b395bd_idx'),
        ),
        migrations.AddIndex(
            model_name='department',
            index=models.Index(fields=['code'], name='api_departm_code_dcd7e2_idx'),
        ),
        migrations.AddIndex(
            model_name='department',
            index=models.Index(fields=['department_type'], name='api_departm_departm_fdaa0e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='department',
            unique_together={('hospital', 'name')},
        ),
        migrations.AddIndex(
            model_name='stafftransfer',
            index=models.Index(fields=['status'], name='api_stafftr_status_159b87_idx'),
        ),
        migrations.AddIndex(
            model_name='stafftransfer',
            index=models.Index(fields=['transfer_date'], name='api_stafftr_transfe_b62c77_idx'),
        ),
        migrations.AddIndex(
            model_name='stafftransfer',
            index=models.Index(fields=['staff_member'], name='api_stafftr_staff_m_e68b30_idx'),
        ),
    ]
